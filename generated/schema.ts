// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class MinerStatus extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save MinerStatus entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save MinerStatus entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("MinerStatus", id.toString(), this);
  }

  static load(id: string): MinerStatus | null {
    return store.get("MinerStatus", id) as MinerStatus | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get sands(): string | null {
    let value = this.get("sands");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set sands(value: string | null) {
    if (value === null) {
      this.unset("sands");
    } else {
      this.set("sands", Value.fromString(value as string));
    }
  }

  get due(): BigInt | null {
    let value = this.get("due");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set due(value: BigInt | null) {
    if (value === null) {
      this.unset("due");
    } else {
      this.set("due", Value.fromBigInt(value as BigInt));
    }
  }

  get balance(): BigInt | null {
    let value = this.get("balance");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set balance(value: BigInt | null) {
    if (value === null) {
      this.unset("balance");
    } else {
      this.set("balance", Value.fromBigInt(value as BigInt));
    }
  }

  get updated(): BigInt | null {
    let value = this.get("updated");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set updated(value: BigInt | null) {
    if (value === null) {
      this.unset("updated");
    } else {
      this.set("updated", Value.fromBigInt(value as BigInt));
    }
  }

  get minerHashrate(): BigInt | null {
    let value = this.get("minerHashrate");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set minerHashrate(value: BigInt | null) {
    if (value === null) {
      this.unset("minerHashrate");
    } else {
      this.set("minerHashrate", Value.fromBigInt(value as BigInt));
    }
  }

  get minerReward(): BigInt | null {
    let value = this.get("minerReward");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set minerReward(value: BigInt | null) {
    if (value === null) {
      this.unset("minerReward");
    } else {
      this.set("minerReward", Value.fromBigInt(value as BigInt));
    }
  }

  get poolHashrate(): BigInt | null {
    let value = this.get("poolHashrate");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set poolHashrate(value: BigInt | null) {
    if (value === null) {
      this.unset("poolHashrate");
    } else {
      this.set("poolHashrate", Value.fromBigInt(value as BigInt));
    }
  }

  get poolReward(): BigInt | null {
    let value = this.get("poolReward");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set poolReward(value: BigInt | null) {
    if (value === null) {
      this.unset("poolReward");
    } else {
      this.set("poolReward", Value.fromBigInt(value as BigInt));
    }
  }

  get day(): i32 {
    let value = this.get("day");
    return value.toI32();
  }

  set day(value: i32) {
    this.set("day", Value.fromI32(value));
  }

  get defaulted(): boolean {
    let value = this.get("defaulted");
    return value.toBoolean();
  }

  set defaulted(value: boolean) {
    this.set("defaulted", Value.fromBoolean(value));
  }
}

export class HashSand extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save HashSand entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save HashSand entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("HashSand", id.toString(), this);
  }

  static load(id: string): HashSand | null {
    return store.get("HashSand", id) as HashSand | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get contractAddress(): string | null {
    let value = this.get("contractAddress");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set contractAddress(value: string | null) {
    if (value === null) {
      this.unset("contractAddress");
    } else {
      this.set("contractAddress", Value.fromString(value as string));
    }
  }

  get period(): BigInt | null {
    let value = this.get("period");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set period(value: BigInt | null) {
    if (value === null) {
      this.unset("period");
    } else {
      this.set("period", Value.fromBigInt(value as BigInt));
    }
  }

  get hashrate(): BigInt | null {
    let value = this.get("hashrate");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set hashrate(value: BigInt | null) {
    if (value === null) {
      this.unset("hashrate");
    } else {
      this.set("hashrate", Value.fromBigInt(value as BigInt));
    }
  }

  get price(): BigInt | null {
    let value = this.get("price");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set price(value: BigInt | null) {
    if (value === null) {
      this.unset("price");
    } else {
      this.set("price", Value.fromBigInt(value as BigInt));
    }
  }

  get minerAddress(): string | null {
    let value = this.get("minerAddress");
    if (value === null || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set minerAddress(value: string | null) {
    if (value === null) {
      this.unset("minerAddress");
    } else {
      this.set("minerAddress", Value.fromString(value as string));
    }
  }
}
